  on:
    push:
      # Sequence of patterns matched against refs/tags
      tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  name: Create Github release after tag releasable code

  jobs:
    create_release:
      name: Create Github release
      if: startsWith(github.ref, 'refs/tags/')
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Build Changelog
          id: github_release
          run: |
            # Start building change log
            # 1. Get the previous tag
            PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
            PR_RELEASE=$(git log --merges --grep 'Merge pull request' --pretty=format:%s $PREVIOUS_TAG..${{github.ref}} | grep -o '#[0-9]*')
            
            # List of the PRS of the release $PR_RELEASE
            # Preparing notes template"
            NOTES="User story | Description \n -- | -- \n"
            
            # Looping over releaseses to get the data
            for pr_number in $PR_RELEASE
            do
                # Getting data from PR: ${pr_number}
                change_log_entry_title=$(gh pr view ${pr_number} | head -n 1 )
                # Stripping the title 
                read lastElement <<< "${change_log_entry_title##*:}"
                # Adding release to the notes
                NOTES+="$lastElement \n"
            done
            
            # Preparing output
            echo "::add-mask::$release_notes"
            echo "$NOTES=$release_notes" >> "$GITHUB_OUTPUT"
        
        - name: Create Release
          uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
          with:
            body: ${{steps.github_release.outputs.release_notes}}